{"version":3,"file":"1804.5580bc06af5aa2c9b932.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/util/UndoManager.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/markdown/htmlToMarkdown.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/markdown/astBuilder.ts","webpack://telegram-t/./src/util/markdown/astRender.ts","webpack://telegram-t/./src/util/markdown/markdownRules.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","interface IState {\n  start?: number;\n  end?: number;\n  scroll?: number;\n}\nexport interface IUndoState extends IState {\n  text?: string;\n}\nexport interface IUndoData extends IState {\n  stack: IUndoState[];\n  index: number;\n  limit: number;\n}\n\nexport class UndoManager {\n  private data: IUndoData;\n\n  public constructor(data: IUndoData) {\n    this.data = data;\n  }\n\n  private addState(state: IUndoState) {\n    this.data.stack = this.data.stack.slice(0, this.data.index + 1);\n    this.data.stack.push(state);\n    if (this.data.limit > 0 && this.data.stack.length > this.data.limit) {\n      this.data.stack.shift();\n    }\n    this.data.index = this.data.stack.length - 1;\n  }\n\n  public add(text: string, start?: number, end?: number, scroll?: number) {\n    if (start === undefined) start = this.data.start;\n    if (end === undefined) end = this.data.end;\n    if (scroll === undefined) scroll = this.data.scroll;\n    const state = this.current();\n    if (state) {\n      if (text === state.text\n        && state.start === start\n        && state.end === end\n        && state.scroll === scroll\n      ) {\n        return;\n      }\n    }\n    this.data.start = start;\n    this.data.end = end;\n    this.data.scroll = scroll;\n    this.addState({\n      text, start, end, scroll,\n    });\n  }\n\n  public setSelection(start: number, end: number) {\n    this.data.start = start;\n    this.data.end = end;\n  }\n\n  public setScroll(scroll: number) {\n    this.data.scroll = scroll;\n  }\n\n  public redo(): IUndoState | undefined {\n    if (this.data.index < this.data.stack.length - 1) {\n      this.data.index++;\n      return this.current();\n    }\n    return undefined;\n  }\n\n  public undo(): IUndoState | undefined {\n    this.data.start = undefined;\n    this.data.end = undefined;\n    if (this.data.index >= 0) {\n      this.data.index--;\n      return this.current();\n    }\n    return undefined;\n  }\n\n  public current(): IUndoState | undefined {\n    if (this.data.index >= 0 && this.data.index < this.data.stack.length) {\n      return this.data.stack[this.data.index];\n    }\n    return undefined;\n  }\n\n  static cteateData(html?: string) {\n    const state = { stack: [], index: -1, limit: 0 };\n    if (html) {\n      new UndoManager(state).add(html);\n    }\n    return state;\n  }\n\n  public clear() {\n    this.data = UndoManager.cteateData();\n  }\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      // mycode\n      let pastedFormattedText = parseHtmlAsFormattedText(pastedText, undefined, false);\n      // let pastedFormattedText = html ? parseHtmlAsFormattedText(\n      //   preparePastedHtml(html), undefined, true,\n      // ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiFormattedText, ApiMessage,\n} from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { UndoManager } from '../../../../util/UndoManager';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n  chat?: ApiChat,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text).replace(/&lt;br&gt;/g, '\\n');\n    if (chat) {\n      chat.undoData = UndoManager.cteateData(html);\n    }\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { getServerTime } from '../../util/serverTime';\nimport { UndoManager } from '../../util/UndoManager';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\n// import { parseMarkdownToAst } from './helpers/markdown-ast';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n// mycode\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\n// import { insertHtmlInSelection } from '../../util/selection';\n// import { parseMarkdown } from from './helpers/markdown';\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput, {getInputScroller} from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\nimport {getSelectionRangePosition, insertHtmlInSelection} from \"../../util/selection\";\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  let undoData = chat?.undoData;\n  if (!undoData && chat) {\n    undoData = UndoManager.cteateData();\n    chat.undoData = undoData;\n  }\n  // const undoManager: UndoManager | undefined = undefined;\n  const undoManager = useMemo(() => {\n    return undoData ? new UndoManager(undoData) : undefined;\n  }, [undoData]);\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        // mycode\n        if (undoManager) {\n          let [start, end] = getSelectionRangePosition(messageInput);\n          const scroller = getInputScroller(messageInput);\n          undoManager.add(messageInput.innerHTML, start, end, scroller?.scrollTop);\n          insertHtmlInSelection(newHtml);\n          [start, end] = getSelectionRangePosition(messageInput);\n          undoManager.add(messageInput.innerHTML, start, end, scroller?.scrollTop);\n          setHtml(messageInput.innerHTML);\n        } else {\n          document.execCommand('insertHTML', false, newHtml);\n        }\n        // messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text).replace(/<br>/g, '\\n');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  function clearUndoHistory() {\n    if (chat && chat.undoData) {\n      chat.undoData = UndoManager.cteateData();\n    }\n  }\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    clearUndoHistory();\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    chat,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            undoManager={undoManager}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { isApiPeerChat } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            lastMessageSender && !isApiPeerChat(lastMessageSender) ? lastMessageSender : undefined,\n            lastMessageSender && isApiPeerChat(lastMessageSender) ? lastMessageSender : chat,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { UndoManager } from '../../../util/UndoManager';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { htmlToMarkdown, isHtml, TG_TAGS } from '../../../util/markdown/htmlToMarkdown';\nimport { debounce } from '../../../util/schedulers';\nimport { getSelectedText, getSelectionRangePosition, setSelectionRangePosition } from '../../../util/selection';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  undoManager?: UndoManager;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nexport function getInputScroller(input: HTMLDivElement | null) {\n  return input!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`);\n}\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  undoManager,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  function clearSelection() {\n    const selection = window.getSelection();\n    if (!selection) {\n      return;\n    }\n    if (undoManager && inputRef.current && selection.rangeCount > 0) {\n      undoManager.add(inputRef.current.innerHTML, 0, 0);\n    }\n    if (selection.removeAllRanges) {\n      selection.removeAllRanges();\n    } else if (selection.empty) {\n      selection.empty();\n    }\n  }\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = getInputScroller(inputRef.current)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  const checkSelection = useCallback(() => {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }, [editableInputId, shouldSuppressTextFormatter]);\n\n  const processSelection = useCallback(() => {\n    if (!checkSelection()) {\n      return;\n    }\n    if (undoManager && inputRef.current) {\n      const [start, end] = getSelectionRangePosition(inputRef.current);\n      undoManager.setSelection(start, end);\n    }\n    if (isTextFormatterDisabled) {\n      return;\n    }\n    const selection = window.getSelection();\n    if (!selection || selection.rangeCount === 0) {\n      return;\n    }\n    const scroller = getInputScroller(inputRef.current)!;\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = scroller!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n    const y = Math.min(scrollerRect.height, Math.max(0, selectionRect.top - scrollerRect.top));\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({ x, y });\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }, [checkSelection, isTextFormatterDisabled, undoManager]);\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const input = e.currentTarget;\n    if (input && undoManager && e.ctrlKey && e.code === 'KeyZ') {\n      const state = e.shiftKey ? undoManager.redo() : undoManager.undo();\n      if (state) {\n        input.innerHTML = state.text!;\n        if (state.start !== undefined && state.end !== undefined) {\n          setSelectionRangePosition(input, state.start!, state.end!);\n        }\n        if (state.scroll !== undefined) {\n          getInputScroller(input)!.scrollTop = state.scroll;\n        }\n        processSelection();\n        onUpdate(input.innerHTML);\n      }\n      e.preventDefault();\n      return;\n    }\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  useEffect(() => {\n    const handleScroll = (e: Event): void => {\n      const s = getInputScroller(inputRef.current);\n      if (s && s === e.target && undoManager) {\n        undoManager.setScroll(s.scrollTop);\n        processSelection();\n      }\n    };\n    document.addEventListener('scroll', handleScroll, true);\n    return () => {\n      document.removeEventListener('scroll', handleScroll, true);\n    };\n  }, [undoManager, processSelection]);\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    if (undoManager) {\n      undoManager.add(innerHTML);\n    }\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  function handleCopy(e: React.ClipboardEvent<HTMLDivElement>) {\n    if (!e.clipboardData) {\n      return;\n    }\n    const html = getSelectedText()!;\n    if (isHtml(html)) {\n      e.preventDefault();\n      const text = htmlToMarkdown(html, TG_TAGS);\n      e.clipboardData.setData('text', text);\n    }\n  }\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception, onUpdate, undoManager]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onCopy={handleCopy}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        inputDiv={inputRef!.current}\n        editableInputId={editableInputId || EDITABLE_INPUT_ID}\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        undoManager={undoManager}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n        onUpdate={onUpdate}\n        processSelection={processSelection}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 8;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const giftStickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const gift = webPage?.gift;\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(gift)!;\n    const attributes = getGiftAttributes(gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    return (\n      <div\n        className=\"web-page-gift web-page-centered web-page-unique\"\n        onClick={() => handleOpenTelegramLink()}\n      >\n        <div className=\"web-page-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"web-page-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n          />\n        </div>\n        <div ref={giftStickersRef} key={sticker.id} className=\"WebPage--unique-sticker\">\n          <StickerView\n            containerRef={giftStickersRef}\n            sticker={sticker}\n            size={STAR_GIFT_STICKER_SIZE}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          renderStarGiftUnique()\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\nimport useOldLang from \"../useOldLang\";\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setIcon'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    emoticon: '💬',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setIcon':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element && element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import { ApiMessageEntityTypes } from '../../api/types';\n\nconst htmlReg = /<\\s*(\\w+)[^>]*>((\\s*(\\w+)[^>]*)|(.*))<\\/\\s*(\\w+)[^/>]*>/gm;\n\nexport function isHtml(html: string) : boolean {\n  htmlReg.lastIndex = 0;\n  if (htmlReg.exec(html)) return true;\n  return false;\n}\nexport const TG_TAGS: Record<string, string> = {\n  B: '**#text#**',\n  STRONG: '**#text#**',\n  I: '__#text#__',\n  EM: '__#text#__',\n  INS: '_#text#_',\n  U: '_#text#_',\n  S: '~~#text#~~',\n  STRIKE: '~~#text#~~',\n  DEL: '~~#text#~~',\n  CODE: '`#text#`',\n  Pre_Code: '```#language#\\n#text#\\n```\\n',\n  Blockquote_Newline: '>#text#',\n  Blockquote_Inline: '>>#text#<<',\n  Link: '[#text#](#url#)',\n  Spoiler: '||#text#||',\n  CodeTitle: 'code-title',\n};\n\nexport function htmlToMarkdown(html: string, map: Record<string, string>) {\n  html = html.replace(/&gt;/g, '>').replace(/&lt;/g, '<');\n  html = html.replace(/&nbsp;/g, ' ');\n  // Replace <div><br></div> with newline (new line in Safari)\n  html = html.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  html = html.replace(/<br([^>]*)?>/g, '\\n');\n  const fragment = document.createElement('div');\n  fragment.innerHTML = html;\n\n  let result = '';\n\n  function addNode(node: ChildNode) {\n    if (node.nodeName === '#text') {\n      return node.textContent;\n    }\n    let textContent = '';\n    for (const child of node.childNodes) {\n      textContent += addNode(child);\n    }\n    const p = map[node.nodeName];\n    if (p) {\n      return p.replace('#text#', textContent);\n    } else {\n      switch (node.nodeName) {\n        case 'BLOCKQUOTE': {\n          const split = textContent.split(/\\n/g);\n          if (split.length > 1) {\n            textContent = '';\n            for (const line of split) {\n              if (line) textContent += `${map.Blockquote_Newline.replace('#text#', line)}\\n`;\n            }\n            return textContent;\n          } else {\n            return `${map.Blockquote_Inline.replace('#text#', split[0])}`;\n          }\n        }\n          break;\n        case 'A': {\n          const a = node as HTMLAnchorElement;\n          if (!textContent) {\n            for (const img of node.childNodes) {\n              if (img instanceof HTMLImageElement && img.alt) {\n                textContent = img.alt;\n                break;\n              }\n            }\n          }\n          return map.Link.replace('#text#', textContent).replace('#url#', a.href);\n        }\n          break;\n        case 'SPAN':\n          if (node instanceof HTMLElement && node.dataset.entityType === ApiMessageEntityTypes.Spoiler) {\n            return map.Spoiler.replace('#text#', textContent);\n          }\n          break;\n        case 'PRE':\n          if (node instanceof HTMLPreElement) {\n            if (result && result.charAt(result.length - 1) !== '\\n') {\n              textContent += '\\n';\n            }\n            return map.Pre_Code.replace('#text#', textContent).replace('#language#', node.dataset.language || '');\n          }\n          break;\n        case 'P':\n          if (node instanceof HTMLElement && node.classList.contains(map.CodeTitle)) {\n            textContent = '';\n          }\n          break;\n        default:\n\n          break;\n      }\n    }\n    return textContent;\n  }\n  for (const node of fragment.childNodes) {\n    result += addNode(node);\n  }\n  return result;\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","export enum AstNodeType {\n  Unknown = 'Unknown',\n  Space = 'Space',\n  NewLine = 'NewLine',\n  Hr = 'hr',\n  Heading = 'Heading',\n  Code = 'code',\n  CodeInline = 'codeInline',\n  Table = 'Table',\n  TableCell = 'TableCell',\n  TableRow = 'TableRow',\n  TableHeader = 'TableHeader',\n  Blockquote = 'blockquote',\n  ExpandableBlockquote = 'blockquote expandable',\n  List = 'List',\n  ListItem = 'ListItem',\n  LooseItem = 'LooseItem',\n  Html = 'Html',\n  Paragraph = 'Paragraph',\n  Text = 'Text',\n  Link = 'Link',\n  Escape = 'Escape',\n  Break = 'br',\n  Strikethrough = 'Strikethrough',\n  Italic = 'Italic',\n  Bold = 'Bold',\n  Image = 'img',\n  Emoji = 'Emoji',\n  Mark = 'mark',\n  Underline = 'Underline',\n  Spoiler = 'Spoiler',\n  Sub = 'sub',\n  Sup = 'sup',\n}\n\nexport interface AstNode {\n  type: AstNodeType;\n  source: string;\n}\nexport interface BlockNode extends AstNode {\n  nodes: AstNode[];\n}\nexport interface ListNode extends BlockNode {\n  ordered: boolean;\n}\nexport interface TextNode extends AstNode {\n  text: string;\n\n}\nexport interface HtmlNode extends TextNode {\n  pre: boolean;\n}\nexport interface LinkNode extends BlockNode {\n  id: string;\n  title: string;\n  href: string;\n}\nexport interface CodeNode extends BlockNode {\n  lang: string;\n}\nexport interface HeadingNode extends BlockNode {\n  depth: number;\n}\nexport interface TableNode extends BlockNode {\n  headers: TableCellNode[];\n}\nexport interface TableCellNode extends BlockNode {\n  align: string | undefined;\n}\nexport enum RuleType {\n  space = 'space',\n  code = 'code',\n  fences = 'fences',\n  heading = 'heading',\n  lheading = 'lheading',\n  hr = 'hr',\n  npTable = 'npTable',\n  blockquote = 'blockquote',\n  expandableBlockquote = 'expandableBlockquote',\n  list = 'list',\n  html = 'html',\n  def = 'def',\n  table = 'table',\n  paragraph = 'paragraph',\n  text = 'text',\n  newLine = 'newLine',\n  escape = 'escape',\n  image = 'image',\n  autoLink = 'autoLink',\n  emoji = 'emoji',\n  url = 'url',\n  tag = 'tag',\n  link = 'link',\n  refLink = 'refLink',\n  idLink = 'idLink',\n  bold = 'bold',\n  italic = 'italic',\n  monospace = 'monospace',\n  br = 'br',\n  strike = 'strike',\n  mark = 'mark',\n  underline = 'underline',\n  spoiler = 'spoiler',\n  sub = 'sub',\n  sup = 'sup',\n  blockquoteInline = 'blockquoteInline',\n  textInline = 'textInline',\n}\nexport interface Rule {\n  type: RuleType;\n  reg: RegExp;\n}\nexport interface RuleTop extends Rule {\n  useTop: boolean;\n}\n\nconst itemReg = /^( *)((?:[*+-]|\\d+\\.)) [^\\n]*(?:\\n(?!\\1(?:[*+-]|\\d+\\.) )[^\\n]*)*/gm;\nconst listItemReplaceReg = /^ *([*+-]|\\d+\\.) +/;\nconst isLoosReg = /\\n\\n(?!\\s*$)/;\nconst replaceReg = /[\\\\~#%&*{}/:<>?|\\\\\"-]/gm;\nconst documentIdReg = /(\\?|&)id=(.*)/;\n\nconst entityMap : Record<string, string> = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n};\nconst emojiMap : Record<string, string> = {\n  ':-)': '&#128515;',\n  ':-(': '&#128550;',\n  '8-)': '&#128526;',\n  ';)': '&#128521;',\n  ':wink:': '&#128521;',\n  ':cry:': '&#128546;',\n  ':laughing:': '&#128518;',\n  ':yum:': '&#128523;',\n};\nfunction replace(str: string) {\n  if (str) {\n    return str.replace(replaceReg, (s) => {\n      const ch = entityMap[s];\n      if (ch) return ch;\n      return '';\n    });\n  }\n  return '';\n}\nfunction notEmpty(source: string[], index1: number, index2: number) {\n  return (source.length > index1 && source[index1]) ? source[index1] : source[index2];\n}\n\nclass AstBuilder {\n  private links: Record<string, AstNode> = {};\n\n  private rules: Rule[];\n\n  constructor(markdownRules: Rule[]) {\n    this.rules = markdownRules;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private escape(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Escape,\n      source: match[0],\n      text: match[1],\n    } as TextNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private link(nodes: AstNode[], match: RegExpMatchArray) {\n    const id = match[2] ? documentIdReg.exec(match[2]) : undefined;\n    nodes.push({\n      type: match[0][0] === '!' ? AstNodeType.Image : AstNodeType.Link,\n      source: match[0],\n      nodes: this.build(match[1]),\n      href: match[2],\n      title: replace(match[4]),\n      id: id ? id[2] : undefined,\n    } as LinkNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this,@typescript-eslint/no-unused-vars\n  private autoLink(nodes: AstNode[], match: RegExpMatchArray) {\n\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private refLink(nodes: AstNode[], match: RegExpMatchArray) {\n    const id = match[2].toLowerCase();\n    const link = {\n      type: match[0][0] === '!' ? AstNodeType.Image : AstNodeType.Link,\n      source: match[0],\n      nodes: this.build(match[1]),\n    } as LinkNode;\n    this.links[id] = link;\n    nodes.push(link);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private idLink(nodes: AstNode[], match: RegExpMatchArray) {\n    const id = match[1].toLowerCase();\n    const link = this.links[id] as LinkNode;\n    if (link) {\n      link.href = match[2];\n      link.title = replace(match[4]);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private bold(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Bold,\n      source: match[0],\n      nodes: this.build(notEmpty(match, 2, 1)),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private italic(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Italic,\n      source: match[0],\n      nodes: this.build(notEmpty(match, 2, 1)),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this,@typescript-eslint/no-unused-vars\n  private br(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Break,\n      source: match[0],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private strike(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Strikethrough,\n      source: match[0],\n      nodes: this.build(match[1]),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private mark(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Mark,\n      source: match[0],\n      nodes: this.build(match[1]),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private underline(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Underline,\n      source: match[0],\n      nodes: this.build(match[1]),\n    } as BlockNode);\n  }\n\n  private spoiler(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Spoiler,\n      source: match[0],\n      nodes: this.build(match[1]),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private sub(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Sub,\n      source: match[0],\n      nodes: this.build(match[1]),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private sup(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Sup,\n      source: match[0],\n      nodes: this.build(match[1]),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private blockquoteInline(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Blockquote,\n      source: match[0],\n      nodes: this.build(match[1], false),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private textInline(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Text,\n      source: match[0],\n      text: match[0],\n    } as TextNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private newLine(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({ type: AstNodeType.NewLine, source: match[0] });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private space(nodes: AstNode[], match: RegExpMatchArray) {\n    if (match[0].length > 1) nodes.push({ type: AstNodeType.Space, source: match[0] });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private monospace(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.CodeInline,\n      source: match[0],\n      nodes: this.build(match[2]),\n    } as BlockNode);\n  }\n\n  // // eslint-disable-next-line class-methods-use-this\n  // private code(nodes: AstNode[], match: RegExpMatchArray) {\n  //   const capStr = match[0].replace('^ {4}/gm', '');\n  //   nodes.push({\n  //     type: AstNodeType.Code,\n  //     source: match[0],\n  //     nodes: this.build(capStr.replace('\\\\n+$', '')),\n  //   } as BlockNode);\n  // }\n\n  // eslint-disable-next-line class-methods-use-this\n  private fences(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Code,\n      source: match[0],\n      lang: match[2],\n      nodes: this.build(match[3]),\n    } as CodeNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private heading(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Heading,\n      source: match[0],\n      depth: match[1].length,\n      nodes: this.build(match[2]),\n    } as HeadingNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private lheading(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Heading,\n      source: match[0],\n      depth: match[2] === '=' ? 1 : 2,\n      nodes: this.build(match[1]),\n    } as HeadingNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this,@typescript-eslint/no-unused-vars\n  private hr(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Hr,\n      source: match[0],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  // private npTable(nodes: AstNode[], match: RegExpMatchArray) {\n  //   // const c = match[3].replace('\\\\n$', '').split('\\\\n');\n  //   // const headers = match[1].replace('^ *| *\\\\| *$', '').split(' *\\\\| *');\n  //   // const aligns = match[2].replace('^ *|\\\\| *$', '').split(' *\\\\| ');\n  //   //\n  //   // const header: TableCellNode[] = [];\n  //   // const align: Array<string | undefined> = [];\n  //   // const cells: TableCellNode[] = [];\n  //   // const rows: AstNode[] = [];\n  //   //\n  //   // for (let i = 0; i < aligns.length; i++) {\n  //   //   if (align[i]?.match('^ *-+: *$')) {\n  //   //     align[i] = 'right';\n  //   //   } else if (align[i]?.match('^ *:-+: *$')) {\n  //   //     align[i] = 'center';\n  //   //   } else if (align[i]?.match('^ *:-+ *$')) {\n  //   //     align[i] = 'left';\n  //   //   } else {\n  //   //     align[i] = undefined;\n  //   //   }\n  //   // }\n  //   // for (let i = 0; i < headers.length; i++) {\n  //   //   header[i] = {\n  //   //     type: AstNodeType.TableHeader,\n  //   //     source: headers[i],\n  //   //     nodes: this.build(headers[i]),\n  //   //     align: align[i],\n  //   //   };\n  //   // }\n  //   // // for (let i = 0; i < c.length; i++) {\n  //   // //   let row = c[i];\n  //   // //   table.cells.push(c[i][0].split(' *\\\\| *'));\n  //   // // }\n  //   //\n  //   // nodes.push({\n  //   //   type: AstNodeType.Table,\n  //   //   source: match[0],\n  //   //   headers: header,\n  //   //   nodes: rows,\n  //   // } as TableNode);\n  // }\n\n  // eslint-disable-next-line class-methods-use-this\n  private expandableBlockquote(nodes: AstNode[], match: RegExpMatchArray, top: boolean) {\n    const capStr = match[0].replace(/^ *\\*\\*> ?/gm, '');\n    nodes.push({\n      type: AstNodeType.ExpandableBlockquote,\n      source: match[0],\n      nodes: this.build(capStr, top),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private blockquote(nodes: AstNode[], match: RegExpMatchArray, top: boolean) {\n    let type = AstNodeType.Blockquote;\n    const source = match[0];\n    let capStr = source.replace(/^ *> ?/gm, '');\n    if (source.length > 1 && source[source.length - 1] === '|' && source[source.length - 2] === '|') {\n      type = AstNodeType.ExpandableBlockquote;\n      capStr = capStr.replace(/\\|\\|/gm, '');\n    }\n\n    nodes.push({\n      type,\n      source,\n      nodes: this.build(capStr, top),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private list(nodes: AstNode[], match: RegExpMatchArray) {\n    const bull = match[2];\n    const list = {\n      type: AstNodeType.List,\n      source: match[0],\n      nodes: [],\n      ordered: bull.length > 1,\n    } as ListNode;\n    const cap = match[0].match(itemReg);\n    if (cap && cap[0].length > 0) {\n      let next = false;\n      const l = cap?.length;\n\n      for (let i = 0; i < l; i++) {\n        let s = cap[i];\n        if (!s) continue;\n        s = s.replace(listItemReplaceReg, '').replace(/[\\n]/g, '');\n        let loose: boolean = next || s.match(isLoosReg) !== undefined;\n        if (i !== l - 1) {\n          next = s[s.length - 1] === '\\n';\n          if (!loose) loose = next;\n        }\n        list.nodes.push({\n          type: loose ? AstNodeType.LooseItem : AstNodeType.ListItem,\n          source: cap[i],\n          nodes: this.build(s),\n        } as BlockNode);\n      }\n      nodes.push(list);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private html(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Html,\n      source: match[0],\n      pre: match[1] === 'pre' || match[1] === 'script' || match[1] === 'style',\n      text: match[0],\n    } as HtmlNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private def(nodes: AstNode[], match: RegExpMatchArray) {\n    nodes.push({\n      type: AstNodeType.Link,\n      source: match[0],\n      nodes: this.build(match[1]),\n      href: match[2],\n      title: match[3],\n    } as LinkNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private table(nodes: AstNode[], match: RegExpMatchArray) {\n    const c = match[3].replace(/(?: *\\| *)?\\n$/g, '').split(/\\n/);\n    const hs = match[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */);\n    const als = match[2].replace(/^ *|\\| *$/g, '').split(/ * *\\| */);\n\n    const headers: TableCellNode[] = [];\n    const aligns: Array<string | undefined> = [];\n    const rows: AstNode[] = [];\n\n    for (let i = 0; i < als.length; i++) {\n      if (als[i]?.match('^ *-+: *$')) {\n        aligns[i] = 'right';\n      } else if (als[i]?.match('^ *:-+: *$')) {\n        aligns[i] = 'center';\n      } else if (als[i]?.match('^ *:-+ *$')) {\n        aligns[i] = 'left';\n      } else {\n        aligns[i] = undefined;\n      }\n    }\n    for (let i = 0; i < hs.length; i++) {\n      headers[i] = {\n        type: AstNodeType.TableHeader,\n        source: hs[i],\n        nodes: this.build(hs[i]),\n        align: aligns[i],\n      };\n    }\n\n    for (let i = 0; i < c.length; i++) {\n      const row = c[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| /);\n      const cells: TableCellNode[] = [];\n      for (let j = 0; j < row.length; j++) {\n        cells.push({\n          type: AstNodeType.TableCell,\n          source: row[j],\n          nodes: this.build(row[j]),\n          align: aligns[j],\n        });\n      }\n      rows.push({\n        type: AstNodeType.TableRow,\n        source: c[i],\n        nodes: cells,\n      } as BlockNode);\n    }\n\n    nodes.push({\n      type: AstNodeType.Table,\n      source: match[0],\n      headers,\n      nodes: rows,\n    } as TableNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private paragraph(nodes: AstNode[], match: RegExpMatchArray) {\n    const pText = match[1][match[1].length - 1] === '\\n' ? match[1].substring(0, match[1].length - 1) : match[1];\n    nodes.push({\n      type: AstNodeType.Paragraph,\n      source: match[0],\n      nodes: this.build(pText),\n    } as BlockNode);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private text(nodes: AstNode[], match: RegExpMatchArray) {\n    if (match[1]) {\n      const pText = match[1][match[1].length - 1] === '\\n' ? match[1].substring(0, match[1].length - 1) : match[1];\n      nodes.push({\n        type: AstNodeType.Paragraph,\n        source: match[0],\n        nodes: this.build(pText),\n      } as BlockNode);\n    } else {\n      nodes.push({\n        type: AstNodeType.Paragraph,\n        source: match[0],\n        text: match[0],\n      } as TextNode);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public build(src: string, top = false) {\n    src = src.replace(/^ +$/gm, '');\n    const nodes : AstNode[] = [];\n    // eslint-disable-next-line no-labels,no-restricted-syntax\n    next: while (src) {\n      for (const rule of this.rules) {\n        const rtop = rule as RuleTop;\n        if (rtop && rtop.useTop && !top) continue;\n        const match = rule.reg.exec(src);\n        if (!match) continue;\n        const prev = src;\n        src = src.substring(match[0].length);\n        switch (rule.type) {\n          case RuleType.newLine:\n            this.newLine(nodes, match);\n            break;\n          case RuleType.space:\n            this.space(nodes, match);\n            break;\n          // case RuleType.code:\n          //   this.code(nodes, match);\n          //   break;\n          case RuleType.fences:\n            this.fences(nodes, match);\n            break;\n          case RuleType.heading:\n            this.heading(nodes, match);\n            break;\n          case RuleType.lheading:\n            this.lheading(nodes, match);\n            break;\n          case RuleType.hr:\n            this.hr(nodes, match);\n            break;\n          // case RuleType.npTable:\n          //   this.npTable(nodes, match);\n          //   break;\n          case RuleType.expandableBlockquote:\n            this.expandableBlockquote(nodes, match, top);\n            break;\n          case RuleType.blockquote:\n            this.blockquote(nodes, match, top);\n            break;\n          case RuleType.list:\n            this.list(nodes, match);\n            break;\n          case RuleType.html:\n            this.html(nodes, match);\n            break;\n          case RuleType.def:\n            this.def(nodes, match);\n            break;\n          case RuleType.table:\n            this.table(nodes, match);\n            break;\n          case RuleType.paragraph:\n            this.paragraph(nodes, match);\n            break;\n\n          case RuleType.escape:\n            this.escape(nodes, match);\n            break;\n          case RuleType.image:\n            this.link(nodes, match);\n            break;\n          case RuleType.autoLink:\n            this.autoLink(nodes, match);\n            break;\n          case RuleType.emoji:\n            src = prev;\n            src = src.replace(match[0], emojiMap[match[1]]);\n            // eslint-disable-next-line no-case-declarations\n            let cap;\n            // eslint-disable-next-line no-cond-assign\n            while ((cap = rule.reg.exec(src))) {\n              src = src.replace(cap[0], emojiMap[cap[1]]);\n            }\n            break;\n          case RuleType.url:\n            this.link(nodes, match);\n            break;\n          case RuleType.tag:\n\n            break;\n          case RuleType.link:\n            this.link(nodes, match);\n            break;\n          case RuleType.refLink:\n            this.refLink(nodes, match);\n            break;\n          case RuleType.idLink:\n            this.idLink(nodes, match);\n            break;\n          case RuleType.bold:\n            this.bold(nodes, match);\n            break;\n          case RuleType.italic:\n            this.italic(nodes, match);\n            break;\n          case RuleType.monospace:\n            this.monospace(nodes, match);\n            break;\n          case RuleType.br:\n            this.br(nodes, match);\n            break;\n          case RuleType.strike:\n            this.strike(nodes, match);\n            break;\n          case RuleType.mark:\n            this.mark(nodes, match);\n            break;\n          case RuleType.underline:\n            this.underline(nodes, match);\n            break;\n          case RuleType.spoiler:\n            this.spoiler(nodes, match);\n            break;\n          case RuleType.sub:\n            this.sub(nodes, match);\n            break;\n          case RuleType.sup:\n            this.sup(nodes, match);\n            break;\n          case RuleType.blockquoteInline:\n            this.blockquoteInline(nodes, match);\n            break;\n          case RuleType.textInline:\n            this.textInline(nodes, match);\n            break;\n          case RuleType.text:\n            this.text(nodes, match);\n            break;\n        }\n        // eslint-disable-next-line no-labels\n        continue next;\n      }\n      if (src) {\n        throw new Error(`Infinite loop on byte: ${src[0]}`);\n      }\n    }\n    return nodes;\n  }\n}\n\nexport function markdownToAstTree(markdownRules: Rule[], src: string) {\n  src = src\n    .replace(/[\\r]/g, '')\n    .replace('\\t', '    ')\n    .replace('\\u00a0', ' ')\n    .replace('\\u2424', '\\n');\n  return new AstBuilder(markdownRules).build(src, true);\n}\n","import type {\n  AstNode, BlockNode, CodeNode, HeadingNode, LinkNode, ListNode, TableCellNode,\n  TableNode, TextNode,\n} from './astBuilder';\nimport { ApiMessageEntityTypes } from '../../api/types';\n\nimport { IS_EMOJI_SUPPORTED } from '../windowEnvironment';\nimport { AstNodeType } from './astBuilder';\n\nexport function astDefaultRender(nodes: AstNode[]) : string {\n  if (!nodes) return '';\n  let out : string = '';\n  for (const node of nodes) {\n    const block = node as BlockNode;\n    switch (node.type) {\n      case AstNodeType.Emoji:\n      case AstNodeType.Text:\n        out += (node as TextNode).text;\n        break;\n      case AstNodeType.Paragraph:\n        out += `<p>${astRender(block.nodes)}</p>`;\n        break;\n      case AstNodeType.Blockquote:\n        out += `<blockquote>${astRender(block.nodes)}</blockquote>\\n`;\n        break;\n      case AstNodeType.ExpandableBlockquote:\n        out += `<blockquote class='expandable'>${astRender(block.nodes)}</blockquote>\\n`;\n        break;\n      case AstNodeType.Break:\n        out += '<br>';\n        break;\n      case AstNodeType.Space:\n        out += ' ';\n        break;\n      case AstNodeType.NewLine:\n        out += '<br>';\n        break;\n      case AstNodeType.CodeInline:\n        out += `<code class=\"text-entity-code\">${(node as TextNode).text}</code>`;\n        break;\n      case AstNodeType.Code: {\n        const code = node as CodeNode;\n        if (code.lang) {\n          out += `<pre class=\"text-entity-pre\"><code class='language-${code.lang}'>${astRender(block.nodes)}</code></pre>`;\n        } else {\n          out += `<pre class=\"text-entity-pre\"><code class=\"text-entity-code\">${astRender(block.nodes)}</code></pre>`;\n        }\n      }\n        break;\n      case AstNodeType.Heading: {\n        const h = node as HeadingNode;\n        out += `<h${h.depth} id=\"-\">${astRender(h.nodes)}</h${h.depth}>\\n`;\n      }\n        break;\n      case AstNodeType.Italic:\n        out += `<i>${astRender(block.nodes)}</i>`;\n        break;\n      case AstNodeType.Bold:\n        out += `<b>${astRender(block.nodes)}</b>`;\n        break;\n      case AstNodeType.Strikethrough:\n        out += `<s>${astRender(block.nodes)}</s>`;\n        break;\n      case AstNodeType.Mark:\n        out += `<mark>${astRender(block.nodes)}</mark>`;\n        break;\n      case AstNodeType.Underline:\n        out += `<u>${astRender(block.nodes)}</u>`;\n        break;\n      case AstNodeType.Spoiler:\n        out += `<span class='spoiler'>${astRender(block.nodes)}</span>`;\n        break;\n      case AstNodeType.Sub:\n        out += `<sub>${astRender(block.nodes)}</sub>`;\n        break;\n      case AstNodeType.Sup:\n        out += `<sup>${astRender(block.nodes)}</sup>`;\n        break;\n      case AstNodeType.ListItem:\n      case AstNodeType.LooseItem:\n        out += `<li>${astRender(block.nodes)}</li>`;\n        break;\n      case AstNodeType.List: {\n        const list = node as ListNode;\n        const type = list.ordered ? 'ol' : 'ul';\n        out += `<${type}>${astRender(list.nodes)}</${type}>`;\n      }\n        break;\n      case AstNodeType.Link: {\n        const link = node as LinkNode;\n        let title = '';\n        let target = '';\n        if (link.title) title = ` title='${link.title}'`;\n        if (link.href && (link.href.startsWith('//') || link.href.toLowerCase().startsWith('http'))) target = ' target=\\'_blank\\' rel=\\'nofollow\\'';\n        out += `<a class=\"text-entity-link\" href=${link.href}${title}${target} dir=\"auto\">${astRender(block.nodes)}</a>`;\n      }\n        break;\n      case AstNodeType.Image: {\n        const image = node as LinkNode;\n        let title = '';\n        let alt = '';\n        let documentId = '';\n        if (image.title) title = ` title='${image.title}'`;\n        if (image.nodes) alt = ` alt='${astRender(block.nodes)}'`;\n        if (image.id) documentId = ` data-document-id='${image.id}'`;\n        out += `<img src=${image.href}${title}${alt}${documentId}/>`;\n      }\n        break;\n      case AstNodeType.TableCell: {\n        const cell = block as TableCellNode;\n        let style = '';\n        if (cell.align) style = ` style='text-align:${cell.align}'`;\n        out += `<td${style}>${astRender(block.nodes)}</td\\n>`;\n      }\n        break;\n      case AstNodeType.TableHeader: {\n        const cell = block as TableCellNode;\n        let style = '';\n        if (cell.align) style = ` style='text-align:${cell.align}'`;\n        out += `<th${style}>${astRender(block.nodes)}</th>\\n`;\n      }\n        break;\n      case AstNodeType.TableRow:\n        out += `<tr>${astRender(block.nodes)}</tr>\\n`;\n        break;\n      case AstNodeType.Table: {\n        const table = block as TableNode;\n        out += `<table>\\n<thead>\\n${astRender(table.headers)}</thead>\\n<tbody>\\n${astRender(table.nodes)}</tbody>\\n</table>\\n`;\n      }\n        break;\n      case AstNodeType.Escape:\n        break;\n      case AstNodeType.Hr:\n        out += '<hr>';\n        break;\n      case AstNodeType.Html:\n        out += (node as TextNode).text;\n        break;\n    }\n  }\n  return out;\n}\nexport function astRender(nodes: AstNode[]) : string {\n  if (!nodes) return '';\n  let out : string = '';\n  for (const node of nodes) {\n    const block = node as BlockNode;\n    switch (node.type) {\n      case AstNodeType.Emoji:\n      case AstNodeType.Text:\n        out += (node as TextNode).text;\n        break;\n      case AstNodeType.Paragraph:\n        out += `<p>${astRender(block.nodes)}</p>`;\n        break;\n      case AstNodeType.Blockquote:\n        out += `<blockquote>${astRender(block.nodes)}</blockquote>`;\n        break;\n      case AstNodeType.ExpandableBlockquote:\n        out += `<blockquote class='expandable'>${astRender(block.nodes)}</blockquote>\\n`;\n        break;\n      case AstNodeType.Break:\n        out += '<br>';\n        break;\n      case AstNodeType.Space:\n        out += ' ';\n        break;\n      case AstNodeType.NewLine:\n        out += '<br>';\n        break;\n      case AstNodeType.CodeInline:\n        out += `<code>${astRender(block.nodes)}</code>`;\n        break;\n      case AstNodeType.Code: {\n        const code = node as CodeNode;\n        let lang = '';\n        if (code.lang)lang = `${code.lang}`;\n        out += `<pre class=\"CodeBlock\" data-language='${lang}'>${astRender(block.nodes)}</pre>\\n`;\n      }\n        break;\n      case AstNodeType.Heading: {\n        const h = node as HeadingNode;\n        out += `<h${h.depth} id=\"-\">${astRender(h.nodes)}</h${h.depth}>\\n`;\n      }\n        break;\n      case AstNodeType.Italic:\n        out += `<i>${astRender(block.nodes)}</i>`;\n        break;\n      case AstNodeType.Bold:\n        out += `<b>${astRender(block.nodes)}</b>`;\n        break;\n      case AstNodeType.Strikethrough:\n        out += `<strike>${astRender(block.nodes)}</strike>`;\n        break;\n      case AstNodeType.Mark:\n        out += `<mark>${astRender(block.nodes)}</mark>`;\n        break;\n      case AstNodeType.Underline:\n        out += `<u>${astRender(block.nodes)}</u>`;\n        break;\n      case AstNodeType.Spoiler:\n        out += `<span data-entity-type='${ApiMessageEntityTypes.Spoiler}'>${astRender(block.nodes)}</span>`;\n        break;\n      case AstNodeType.Sub:\n        out += `<sub>${astRender(block.nodes)}</sub>`;\n        break;\n      case AstNodeType.Sup:\n        out += `<sup>${astRender(block.nodes)}</sup>`;\n        break;\n      case AstNodeType.ListItem:\n      case AstNodeType.LooseItem:\n        out += `<li>${astRender(block.nodes)}</li>`;\n        break;\n      case AstNodeType.List: {\n        const list = node as ListNode;\n        const type = list.ordered ? 'ol' : 'ul';\n        out += `<${type}>${astRender(list.nodes)}</${type}>`;\n      }\n        break;\n      case AstNodeType.Link: {\n        const link = node as LinkNode;\n        let title = '';\n        const userId = '';\n        if (link.title) title = ` title='${link.title}'`;\n        out += `<a href='${link.href}'${title}${userId}>${astRender(block.nodes)}</a>`;\n      }\n        break;\n      case AstNodeType.Image: {\n        const image = node as LinkNode;\n        let title = '';\n        let alt = '';\n        const documentId = '';\n        if (image.title) title = ` title='${image.title}'`;\n        if (image.nodes) alt = ` alt='${astRender(block.nodes)}'`;\n        if (IS_EMOJI_SUPPORTED) {\n          out += `<img src='${image.href}'${title}${documentId}${alt}/>`;\n        } else {\n          out += `<a href='${image.href}'${title}${documentId}>${astRender(block.nodes)}</a>`;\n        }\n      }\n        break;\n      case AstNodeType.TableCell: {\n        const cell = block as TableCellNode;\n        let style = '';\n        if (cell.align) style = ` style='text-align:${cell.align}'`;\n        out += `<td${style}>${astRender(block.nodes)}</td\\n>`;\n      }\n        break;\n      case AstNodeType.TableHeader: {\n        const cell = block as TableCellNode;\n        let style = '';\n        if (cell.align) style = ` style='text-align:${cell.align}'`;\n        out += `<th${style}>${astRender(block.nodes)}</th>\\n`;\n      }\n        break;\n      case AstNodeType.TableRow:\n        out += `<tr>${astRender(block.nodes)}</tr>\\n`;\n        break;\n      case AstNodeType.Table: {\n        const table = block as TableNode;\n        out += `<table>\\n<thead>\\n${astRender(table.headers)}</thead>\\n<tbody>\\n${astRender(table.nodes)}</tbody>\\n</table>\\n`;\n      }\n        break;\n      case AstNodeType.Escape:\n        break;\n      case AstNodeType.Hr:\n        out += '<hr>';\n        break;\n      case AstNodeType.Html:\n        out += (node as TextNode).text;\n        break;\n    }\n  }\n  return out;\n}\n","import type { Rule, RuleTop } from './astBuilder';\n\nimport { RuleType } from './astBuilder';\n\nlet defaultMarkdownRules: Rule[];\nlet tgMarkdownRules: Rule[];\n\nexport function getDefaultMarkdownRules() {\n  if (!defaultMarkdownRules) {\n    defaultMarkdownRules = [];\n\n    defaultMarkdownRules.push({ type: RuleType.newLine, reg: /^\\n+/ });\n    defaultMarkdownRules.push({ type: RuleType.space, reg: /^\\n+/ });\n    defaultMarkdownRules.push({ type: RuleType.br, reg: /^ {2,}\\n(?!\\s*$)/ });\n\n    // defaultMarkdownRules.push({ type: RuleType.code, reg: /^( {4}[^\\n]+\\n*)+/ });\n    defaultMarkdownRules.push({ type: RuleType.fences, reg: /^ *(`{3,}|~{3,}) *(?<lang>\\S+)? *\\n(?<code>[\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/ });\n    defaultMarkdownRules.push({ type: RuleType.monospace, reg: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/ });\n\n    defaultMarkdownRules.push({ type: RuleType.heading, reg: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/ });\n    defaultMarkdownRules.push({ type: RuleType.npTable, useTop: true, reg: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/ } as RuleTop);\n    defaultMarkdownRules.push({ type: RuleType.lheading, reg: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/ });\n    defaultMarkdownRules.push({ type: RuleType.hr, reg: /^( *[-*_]){3,} *(?:\\n+|$)/ });\n    defaultMarkdownRules.push({ type: RuleType.blockquote, reg: /^( *>[^\\n]+(\\n(?! *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[''(]([^\\n]+)['')])? *(?:\\n+|$))[^\\n]+)*\\n*)+/ });\n    defaultMarkdownRules.push({ type: RuleType.list, reg: /^( *)((?:[*+-]|\\d+\\.)) [\\s\\S]+?(?:\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))|\\n+(?= *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[''(]([^\\n]+)['')])? *(?:\\n+|$))|\\n{2,}(?! )(?!\\1(?:[*+-]|\\d+\\.) )\\n*|\\s*$)/ });\n    defaultMarkdownRules.push({ type: RuleType.html, reg: /^ *(?:<!--[\\s\\S]*?-->|<((?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:\\/|[^\\w\\s@]*@)\\b)[\\s\\S]+?<\\/\\1>|<(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:\\/|[^\\w\\s@]*@)\\b(?:\"\"[^\"\"]*\"\"|'[^']*'|[^'\"\">])*?>) *(?:\\n{2,}|\\s*$)/m });\n    defaultMarkdownRules.push({ type: RuleType.def, useTop: true, reg: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[''(]([^\\n]+)['')])? *(?:\\n+|$)/ } as RuleTop);\n    defaultMarkdownRules.push({ type: RuleType.table, useTop: true, reg: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/ } as RuleTop);\n\n    defaultMarkdownRules.push({ type: RuleType.escape, reg: /^\\\\([\\\\`*{}\\\\[\\]()#+\\-.!_>~|])/ });\n\n    defaultMarkdownRules.push({ type: RuleType.image, reg: /^!\\[(?<altText>.*)\\]\\((?<href>.*?)\\s*(\"(?<title>.*[^\"])\")?\\s*\\)/ });\n    defaultMarkdownRules.push({ type: RuleType.autoLink, reg: /^<([^ >]+(@|:\\/)[^ >]+)>/ });\n    defaultMarkdownRules.push({ type: RuleType.emoji, reg: /(:-\\)|:-\\(|8-\\)|;\\)|:wink:|:cry:|:laughing:|:yum:)/g });\n    defaultMarkdownRules.push({ type: RuleType.url, reg: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"\"')\\]\\s])/ });\n    defaultMarkdownRules.push({ type: RuleType.link, reg: /^\\[([^\\]]*)\\]\\(([^)]*)\\)/ });\n    defaultMarkdownRules.push({ type: RuleType.refLink, reg: /^!?\\[((?:\\[[^\\]]*\\]|[^\\\\[\\]]|\\](?=[^\\\\[]*\\]))*)\\]\\s*\\[([^\\]]*)\\]/ });\n    defaultMarkdownRules.push({ type: RuleType.idLink, reg: /^\\[(?<id>.*)\\]:\\s*(?<href>\\S*)\\s*(\"(?<title>.*[^\"])\")?\\s*/ });\n\n    defaultMarkdownRules.push({ type: RuleType.tag, reg: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"\"[^\"\"]*\"\"|'[^']*'|[^'\"\">])*?>/ });\n\n    defaultMarkdownRules.push({ type: RuleType.bold, reg: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/ });\n    defaultMarkdownRules.push({ type: RuleType.italic, reg: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/ });\n\n    defaultMarkdownRules.push({ type: RuleType.strike, reg: /^~~(?=\\S)([\\s\\S]*?\\S)~~/ });\n    defaultMarkdownRules.push({ type: RuleType.mark, reg: /^==(?=\\S)([\\s\\S]*?\\S)==/ });\n    defaultMarkdownRules.push({ type: RuleType.underline, reg: /^\\+\\+(?=\\S)([\\s\\S]*?\\S)\\+\\+/ });\n    defaultMarkdownRules.push({ type: RuleType.sub, reg: /^~(?=\\S)([\\s\\S]*?\\S)~/ });\n    defaultMarkdownRules.push({ type: RuleType.sup, reg: /^\\^(?=\\S)([\\s\\S]*?\\S)\\^/ });\n\n    defaultMarkdownRules.push({ type: RuleType.paragraph, useTop: true, reg: /^((?:[^\\n]+\\n?(?! *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\\\2 *(?:\\n+|$)|( *)((?:[*+-]|\\d+\\.)) [\\s\\S]+?(?:\\n+(?=\\\\3?(?:[-*_] *){3,}(?:\\n+|$))|\\n+(?= *\\[([^\\]]+)\\\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$))|\\n{2,}(?! )(?!\\\\1(?:[*+-]|\\d+\\.) )\\n*|\\s*$)|( *[-*_]){3,} *(?:\\n+|$)| *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)|([^\\n]+)\\n *([=|-]){2,} *(?:\\n+|$)|( *>[^\\n]+(\\n(?! *\\[([^\\]]+)\\\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$))[^\\n]+)*\\n*)+|<(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:\\/|[^\\w\\s@]*@)\\b| *\\[([^\\]]+)\\\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)))+)\\n*/ } as RuleTop);\n\n    defaultMarkdownRules.push({ type: RuleType.textInline, reg: /^[\\s\\S]+?(?=[\\\\<!\\\\[_*`~^]|https?:\\/\\/| {2,}\\n|$)/ });\n    defaultMarkdownRules.push({ type: RuleType.text, reg: /^[^\\n]+/ });\n  }\n  return defaultMarkdownRules;\n}\n\nexport function getTgMarkdownRules() {\n  if (!tgMarkdownRules) {\n    tgMarkdownRules = [];\n\n    tgMarkdownRules.push({ type: RuleType.newLine, reg: /^\\n+/ });\n    // tgMarkdownRules.push({ type: RuleType.html, reg: /^<\\s*(\\w+)[^>]*>((\\s*(\\w+)[^>]*)|(.*))<\\/\\s*(\\w+)[^/>]*>/ });\n\n    // tgMarkdownRules.push({ type: RuleType.code, reg: /^( {4}[^\\n]+\\n*)+/ });\n    tgMarkdownRules.push({ type: RuleType.fences, reg: /^ *(`{3,}|~{3,}) *(?<lang>\\S+)? *\\n(?<code>[\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/ });\n    tgMarkdownRules.push({ type: RuleType.monospace, reg: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/ });\n\n    // tgMarkdownRules.push({ type: RuleType.blockquoteInline, reg: /^>>(.*)<</ });\n    tgMarkdownRules.push({ type: RuleType.blockquote, reg: /^(> ?.+\\n*)+ ?/ });\n\n\n    tgMarkdownRules.push({ type: RuleType.image, reg: /^!\\[(?<altText>.*)\\]\\((?<href>.*?)\\s*(\"(?<title>.*[^\"])\")?\\s*\\)/ });\n    tgMarkdownRules.push({ type: RuleType.link, reg: /^\\[([^\\]]*)\\]\\(([^)]*)\\)/ });\n\n    tgMarkdownRules.push({ type: RuleType.bold, reg: /^\\*\\*(.*)\\*\\*/ });\n    tgMarkdownRules.push({ type: RuleType.strike, reg: /^~~(?=\\S)([\\s\\S]*?\\S)~~/ });\n    tgMarkdownRules.push({ type: RuleType.italic, reg: /^__(.*)__/ });\n    tgMarkdownRules.push({ type: RuleType.underline, reg: /^_(.*)_/ });\n    tgMarkdownRules.push({ type: RuleType.spoiler, reg: /^\\|\\|(.*)\\|\\|/m });\n\n    tgMarkdownRules.push({ type: RuleType.textInline, reg: /^[\\s\\S]+?(?=[\\\\<!\\\\[>>|_*`~^]|https?:\\/\\/| {2,}\\n|$)/m });\n\n    tgMarkdownRules.push({ type: RuleType.text, reg: /^[^\\n]+/ });\n  }\n  return tgMarkdownRules;\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { markdownToAstTree } from './markdown/astBuilder';\nimport { astRender } from './markdown/astRender';\nimport { isHtml } from './markdown/htmlToMarkdown';\nimport { getTgMarkdownRules } from './markdown/markdownRules';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 6;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n\n  let text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, replaceLen, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      if (replaceLen) {\n        text = text.substring(0, index - replaceLen) + text.substring(index);\n        textIndex = index - replaceLen;\n      } else {\n        textIndex = index;\n      }\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      // textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  // mycode\n  html = html.replace(/&gt;/g, '>').replace(/&lt;/g, '<');\n  html = html.replace(/&nbsp;/g, ' ');\n  // Replace <div><br></div> with newline (new line in Safari)\n  html = html.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  let parsedHtml = html;\n  if (!isHtml(html)) {\n    const nodes = markdownToAstTree(getTgMarkdownRules(), html);\n    parsedHtml = astRender(nodes);\n  }\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; replaceLen?: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  // mycode\n  if (!type) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n  let textContent = '';\n  if (node.textContent) textContent = node.textContent;\n\n  const rawIndex = rawText.indexOf(textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  let offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    let replaceLen: number | undefined;\n    let lang = (node as HTMLPreElement).dataset.language;\n    const parent = node.parentElement;\n    if (parent && parent.children.length > 0 && parent.classList.contains('CodeBlock')) {\n      const p = parent.children[0];\n      if (p.textContent && p.classList.contains('code-title')) {\n        lang = p.textContent;\n        offset -= p.textContent.length;\n        replaceLen = p.textContent.length;\n      }\n    }\n    return {\n      index,\n      replaceLen,\n      entity: {\n        type,\n        offset,\n        length,\n        language: lang,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    // const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    // if (lastInsertedNode) {\n    //   range.setStartAfter(lastInsertedNode);\n    //   range.setEndAfter(lastInsertedNode);\n    // } else {\n    //   range.collapse(false);\n    // }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n\nexport function getSelectionRangePosition(container: HTMLElement, useAllText: boolean = false) : [number, number, string] {\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return [0, 0, ''];\n  }\n\n  const range = selection.getRangeAt(0);\n  let start = range.startOffset;\n  let end = range.endOffset;\n  let pos = 0;\n  let allText = '';\n\n  let { startContainer, endContainer } = range;\n  if (startContainer.nodeType !== Node.TEXT_NODE) {\n    startContainer = startContainer.childNodes[range.startOffset];\n    start = 0;\n  }\n  if (endContainer.nodeType !== Node.TEXT_NODE) {\n    endContainer = endContainer.childNodes[range.endOffset];\n    end = 0;\n  }\n  function getOffset(p: Node) {\n    for (let i = 0; i < p.childNodes.length; i++) {\n      const child = p.childNodes[i];\n      if (child.nodeName === 'BR') {\n        pos += 1;\n        if (useAllText) allText += '\\n';\n        continue;\n      }\n      if (child.nodeType === Node.TEXT_NODE) {\n        pos += child.textContent!.length;\n        if (useAllText) allText += child.textContent;\n      } else if (getOffset(child)) {\n        return true;\n      }\n      if (child === startContainer) {\n        start += pos - (child.nodeType === Node.TEXT_NODE ? child.textContent!.length : 0);\n      }\n      if (child === endContainer) {\n        end += pos - (child.nodeType === Node.TEXT_NODE ? child.textContent!.length : 0);\n        if (!useAllText) return true;\n      }\n    }\n    return false;\n  }\n  getOffset(container);\n  return [start, end, allText];\n}\n\nexport function setSelectionRangePosition(container: HTMLElement, start: number, end: number) {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n  let pos = 0;\n  let stop = start;\n  const range = document.createRange();\n  function getOffset(p: Node) {\n    for (let i = 0; i < p.childNodes.length; i++) {\n      const child = p.childNodes[i];\n      if (child.nodeName === 'BR') {\n        pos += 1;\n        continue;\n      }\n      if (child.nodeType === Node.TEXT_NODE) {\n        pos += child.textContent!.length;\n      } else if (getOffset(child)) {\n        return true;\n      }\n      if (stop === start) {\n        if (pos >= stop) {\n          range.setStart(child, stop - (pos - child.textContent!.length));\n          stop = end;\n        }\n      }\n      if (stop === end) {\n        if (pos >= stop) {\n          range.setEnd(child, stop - (pos - child.textContent!.length));\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  getOffset(container);\n\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\nexport function getSelectedText() {\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return undefined;\n  }\n  const range = selection.getRangeAt(0);\n  const clonedSelection = range.cloneContents();\n  const div = document.createElement('div');\n  div.appendChild(clonedSelection);\n  return div.innerHTML;\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","UndoManager","constructor","this","addState","state","stack","index","limit","shift","add","text","scroll","setSelection","setScroll","redo","undo","cteateData","html","clear","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","isFrozen","URL_ENTITIES","ApiMessageEntityTypes","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","href","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","async","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","Promise","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","attachments","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","groupedId","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","files","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","from","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","file","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","stripCustomEmoji","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","anchor","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","parseHtmlAsFormattedText","linkEntity","entities","find","entity","url","match","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showNotification","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","undoData","undoManager","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","setAttachments","hasAttachments","nextText","setNextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","getSelectionRangePosition","scroller","getInputScroller","innerHTML","scrollTop","insertHtmlInSelection","execCommand","requestNextMutation","focusEditableElement","insertTextAndUpdateCursor","replace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","editedMessage","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","newAttachments","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","buildAttachment","canReplace","canReplaceMessageMedia","all","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","err","console","error","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","querySelectorAll","el","innerText","getAttribute","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","CustomEmoji","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","useClipboardPaste","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","preventDefault","activeElement","pastedText","getData","pastedFormattedText","containsCustomEmoji","items","getFilesFromDataTransferItems","textToPaste","isWordDocument","DOMParser","parseFromString","documentElement","hasText","shouldSetAttachments","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","concat","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","tempInput","contentEditable","top","element","lastChild","textLength","textContent","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","replyToMessageId","getMessageReplyInfo","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","indexOf","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","isApiPeerChat","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","remove","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","cloneNode","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","videoUrl","options","_defineProperty","setAttribute","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onChange","onKeyDown","isComposing","setSelectionRangePosition","altKey","onCopy","getSelectedText","isHtml","htmlToMarkdown","TG_TAGS","setData","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","inputDiv","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","AnimatedSticker","onEnded","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","removeAttribute","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","giftStickersRef","handleMediaClick","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","gift","getStickerFromGift","attributes","getGiftAttributes","backdrop","pattern","model","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","renderStarGiftUnique","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","staticIcon","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","availableReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","DEBUG","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","htmlReg","lastIndex","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","Pre_Code","Blockquote_Newline","Blockquote_Inline","CodeTitle","fragment","addNode","nodeName","child","childNodes","p","line","HTMLImageElement","entityType","HTMLPreElement","charAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","AstNodeType","RuleType","itemReg","listItemReplaceReg","isLoosReg","replaceReg","documentIdReg","entityMap","emojiMap","notEmpty","index1","index2","AstBuilder","markdownRules","rules","escape","nodes","Escape","build","autoLink","refLink","links","idLink","bold","Bold","italic","Italic","br","Break","strike","Strikethrough","mark","Mark","underline","Underline","spoiler","sub","Sub","sup","Sup","blockquoteInline","Blockquote","textInline","newLine","NewLine","space","Space","monospace","CodeInline","fences","Code","heading","Heading","depth","lheading","hr","Hr","expandableBlockquote","capStr","ExpandableBlockquote","blockquote","bull","List","ordered","cap","loose","LooseItem","Html","pre","def","table","hs","als","headers","aligns","rows","TableHeader","align","cells","TableCell","TableRow","Table","paragraph","pText","Paragraph","rule","useTop","reg","tag","astRender","out","Emoji","tgMarkdownRules","ENTITY_CLASS_BY_NODE_NAME","Strike","PRE","Pre","BLOCKQUOTE","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","replaceLen","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","parent","getEntityDataFromNode","hasChildNodes","replaceWith","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","insertNode","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","useAllText","startOffset","pos","allText","startContainer","getOffset","clonedSelection","div","fileSelector","accept","noMultiple","onchange","isElementInViewport","windowHeight"],"sourceRoot":""}